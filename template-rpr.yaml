AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  Application for outbound messages for relying parties

Parameters:
  Environment:
    Description: Name of Environment to deploy to
    Type: String
    Default: build
    AllowedValues:
      - development
      - build
      - staging
  CodeSigningConfigArn:
    Type: String
    Description: >
      The ARN of the Code Signing Config to use, provided by the deployment pipeline
    Default: "none"
  PermissionsBoundary:
    Type: String
    Description: >
      The ARN of the permissions boundary to apply to any role created by the template
    Default: "none"
  VpcStackName:
    Type: "String"
    Description: "The name of the stack that defines the VPC to use"
  BranchName:
    Type: String
    Description: "Name of the branch to be deployed"
    Default: "main"

Conditions:
  UseCodeSigning: !Not [!Equals [!Ref CodeSigningConfigArn, "none"]]
  UsePermissionsBoundary: !Not [!Equals [!Ref PermissionsBoundary, "none"]]

Globals:
  Function:
    Runtime: nodejs20.x
    CodeSigningConfigArn: !If
      - UseCodeSigning
      - !Ref CodeSigningConfigArn
      - !Ref AWS::NoValue
    PermissionsBoundary: !If
      - UsePermissionsBoundary
      - !Ref PermissionsBoundary
      - !Ref AWS::NoValue
    Timeout: 30
    Tracing: Active
    Architectures:
      - arm64

Resources:
  ##############################################################
  # Receiver Lambda
  ##############################################################
  ReceiverFunction:
    #checkov:skip=CKV_AWS_116: Lambda level DLQs not supported with SQS / Api Gateway Triggers. DLQs at Queue level instead
    Type: AWS::Serverless::Function
    Properties:
      Tracing: Active
      Environment:
        Variables:
          LAMBDA_NAME: ReceiverLambda
          ENVIRONMENT: !Sub ${Environment}
      FunctionName: !Sub ${Environment}-${AWS::StackName}-receiver
      Description: Function for receiving outbound messages from SSF to RP
      CodeUri: src/lambdas/receiver-lambda
      Handler: handler.handler
      MemorySize: 128
      KmsKeyArn: !GetAtt LambdaKeyStore.Ar
      ReservedConcurrentExecutions: 10
      VpcConfig:
        SubnetIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdA
          - Fn::ImportValue: !Sub ${VpcStackName}-ProtectedSubnetIdB
        SecurityGroupIds:
          - Fn::ImportValue: !Sub ${VpcStackName}-AWSServicesEndpointSecurityGroupId
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        Minify: false
        Target: "es2020"
        EntryPoints:
          - handler.ts

  ##############################################################
  # Encryption Keys
  ##############################################################
  LambdaKeyStore:
    Type: AWS::KMS::Key
    Properties:
      Description: Encryption key for Lambdas Variables
      EnableKeyRotation: true
      KeyPolicy:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
            Action: "kms:*"
            Resource: "*"
